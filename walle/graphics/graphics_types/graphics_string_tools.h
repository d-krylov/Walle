#ifndef WALLE_GRAPHICS_STRING_TOOLS_H
#define WALLE_GRAPHICS_STRING_TOOLS_H

#include "graphics_enums.h"
#include <string>

namespace Walle {

std::string_view ToString(MemoryUnmapMaskBit input);
std::string_view ToString(TessellationDomainOrigin input);
std::string_view ToString(DescriptorPoolCreateMaskBit input);
std::string_view ToString(SamplerYcbcrModelConversion input);
std::string_view ToString(MicromapType input);
std::string_view ToString(ViewportCoordinateSwizzle input);
std::string_view ToString(MemoryAllocateMaskBit input);
std::string_view ToString(PeerMemoryFeatureMaskBit input);
std::string_view ToString(DisplayPlaneAlphaMaskBit input);
std::string_view ToString(BlendOp input);
std::string_view ToString(ConservativeRasterizationMode input);
std::string_view ToString(DeviceEventType input);
std::string_view ToString(DisplayPowerState input);
std::string_view ToString(LatencyMarker input);
std::string_view ToString(ExternalFenceFeatureMaskBit input);
std::string_view ToString(ExternalFenceHandleTypeMaskBit input);
std::string_view ToString(DiscardRectangleMode input);
std::string_view ToString(ColorComponentMaskBit input);
std::string_view ToString(ExternalMemoryHandleTypeMaskBit input);
std::string_view ToString(VendorId input);
std::string_view ToString(DeviceDiagnosticsConfigMaskBit input);
std::string_view ToString(PresentMode input);
std::string_view ToString(DescriptorSetLayoutCreateMaskBit input);
std::string_view ToString(VideoEncodeH265StdMaskBit input);
std::string_view ToString(PrivateDataSlotCreateMaskBit input);
std::string_view ToString(ShaderModuleCreateMaskBit input);
std::string_view ToString(ValidationFeatureDisable input);
std::string_view ToString(DescriptorUpdateTemplateType input);
std::string_view ToString(ValidationFeatureEnable input);
std::string_view ToString(DebugUtilsMessageTypeMaskBit input);
std::string_view ToString(SubgroupFeatureMaskBit input);
std::string_view ToString(ValidationCheck input);
std::string_view ToString(SparseMemoryBindMaskBit input);
std::string_view ToString(RasterizationOrder input);
std::string_view ToString(DeviceMemoryReportEventType input);
std::string_view ToString(VideoEncodeRateControlModeMaskBit input);
std::string_view ToString(OpticalFlowGridSizeMaskBit input);
std::string_view ToString(PointClippingBehavior input);
std::string_view ToString(CompositeAlphaMaskBit input);
std::string_view ToString(DependencyMaskBit input);
std::string_view ToString(SemaphoreType input);
std::string_view ToString(LayerSettingType input);
std::string_view ToString(SwapchainCreateMaskBit input);
std::string_view ToString(LineRasterizationMode input);
std::string_view ToString(AttachmentDescriptionMaskBit input);
std::string_view ToString(SampleCountMaskBit input);
std::string_view ToString(ComponentType input);
std::string_view ToString(CommandPoolResetMaskBit input);
std::string_view ToString(CommandBufferLevel input);
std::string_view ToString(DirectDriverLoadingMode input);
std::string_view ToString(AccessMaskBit input);
std::string_view ToString(DeviceGroupPresentModeMaskBit input);
std::string_view ToString(SparseImageFormatMaskBit input);
std::string_view ToString(PresentScalingMaskBit input);
std::string_view ToString(IndirectStateMaskBit input);
std::string_view ToString(MemoryMapMaskBit input);
std::string_view ToString(QueryPipelineStatisticMaskBit input);
std::string_view ToString(AccelerationStructureCompatibility input);
std::string_view ToString(FenceCreateMaskBit input);
std::string_view ToString(PipelineStageMaskBit input);
std::string_view ToString(ExternalSemaphoreFeatureMaskBit input);
std::string_view ToString(ImageCreateMaskBit input);
std::string_view ToString(CommandBufferUsageMaskBit input);
std::string_view ToString(InternalAllocationType input);
std::string_view ToString(BlockMatchWindowCompareMode input);
std::string_view ToString(ShaderCorePropertiesMaskBit input);
std::string_view ToString(EventCreateMaskBit input);
std::string_view ToString(CompareOp input);
std::string_view ToString(GraphicsPipelineLibraryMaskBit input);
std::string_view ToString(ToolPurposeMaskBit input);
std::string_view ToString(SamplerAddressMode input);
std::string_view ToString(DynamicState input);
std::string_view ToString(DeviceFaultAddressType input);
std::string_view ToString(CubicFilterWeights input);
std::string_view ToString(VertexInputRate input);
std::string_view ToString(ConditionalRenderingMaskBit input);
std::string_view ToString(SamplerYcbcrRange input);
std::string_view ToString(Filter input);
std::string_view ToString(CommandPoolCreateMaskBit input);
std::string_view ToString(LogicOp input);
std::string_view ToString(LayeredDriverUnderlyingApi input);
std::string_view ToString(IndexType input);
std::string_view ToString(PipelineCreateMaskBit2 input);
std::string_view ToString(VideoChromaSubsamplingMaskBit input);
std::string_view ToString(FenceImportMaskBit input);
std::string_view ToString(DeviceAddressBindingMaskBit input);
std::string_view ToString(AttachmentLoadOp input);
std::string_view ToString(BufferUsageMaskBit2 input);
std::string_view ToString(PipelineCacheCreateMaskBit input);
std::string_view ToString(DeviceAddressBindingType input);
std::string_view ToString(BufferUsageMaskBit input);
std::string_view ToString(BorderColor input);
std::string_view ToString(ObjectType input);
std::string_view ToString(PerformanceOverrideType input);
std::string_view ToString(SamplerReductionMode input);
std::string_view ToString(DebugReportObjectType input);
std::string_view ToString(PrimitiveTopology input);
std::string_view ToString(StencilOp input);
std::string_view ToString(SamplerMipmapMode input);
std::string_view ToString(ImageLayout input);
std::string_view ToString(MicromapCreateMaskBit input);
std::string_view ToString(SubpassContents input);
std::string_view ToString(DebugReportMaskBit input);
std::string_view ToString(QueryControlMaskBit input);
std::string_view ToString(AttachmentStoreOp input);
std::string_view ToString(PipelineStageMaskBit2 input);
std::string_view ToString(ComponentSwizzle input);
std::string_view ToString(ImageViewType input);
std::string_view ToString(PhysicalDeviceLayeredApi input);
std::string_view ToString(SubpassDescriptionMaskBit input);
std::string_view ToString(IndirectCommandsTokenType input);
std::string_view ToString(FormatFeatureMaskBit input);
std::string_view ToString(OpticalFlowExecuteMaskBit input);
std::string_view ToString(QueryResultMaskBit input);
std::string_view ToString(CommandBufferResetMaskBit input);
std::string_view ToString(OpacityMicromapSpecialIndex input);
std::string_view ToString(SharingMode input);
std::string_view ToString(DescriptorType input);
std::string_view ToString(PhysicalDeviceType input);
std::string_view ToString(ImageUsageMaskBit input);
std::string_view ToString(MemoryHeapMaskBit input);
std::string_view ToString(AccelerationStructureBuildType input);
std::string_view ToString(SamplerCreateMaskBit input);
std::string_view ToString(PipelineCacheHeaderVersion input);
std::string_view ToString(FormatFeatureMaskBit2 input);
std::string_view ToString(OutOfBandQueueType input);
std::string_view ToString(CullModeMaskBit input);
std::string_view ToString(FrontFace input);
std::string_view ToString(RenderPassCreateMaskBit input);
std::string_view ToString(DeviceQueueCreateMaskBit input);
std::string_view ToString(VideoDecodeUsageMaskBit input);
std::string_view ToString(VideoEncodeCapabilityMaskBit input);
std::string_view ToString(ShaderCreateMaskBit input);
std::string_view ToString(OpticalFlowSessionCreateMaskBit input);
std::string_view ToString(MemoryPropertyMaskBit input);
std::string_view ToString(VideoEncodeH265CtbSizeMaskBit input);
std::string_view ToString(Format input);
std::string_view ToString(AccelerationStructureMemoryRequirementsType input);
std::string_view ToString(SemaphoreWaitMaskBit input);
std::string_view ToString(BufferCreateMaskBit input);
std::string_view ToString(PipelineShaderStageCreateMaskBit input);
std::string_view ToString(ExternalSemaphoreHandleTypeMaskBit input);
std::string_view ToString(ShaderStageMaskBit input);
std::string_view ToString(TimeDomain input);
std::string_view ToString(ImageViewCreateMaskBit input);
std::string_view ToString(ExternalMemoryFeatureMaskBit input);
std::string_view ToString(StructureType input);
std::string_view ToString(CopyMicromapMode input);
std::string_view ToString(ChromaLocation input);
std::string_view ToString(BlendOverlap input);
std::string_view ToString(DriverId input);
std::string_view ToString(CoverageModulationMode input);
std::string_view ToString(CoverageReductionMode input);
std::string_view ToString(ValidationCacheHeaderVersion input);
std::string_view ToString(SystemAllocationScope input);
std::string_view ToString(ShaderGroupShader input);
std::string_view ToString(HostImageCopyMaskBit input);
std::string_view ToString(DebugUtilsMessageSeverityMaskBit input);
std::string_view ToString(DescriptorBindingMaskBit input);
std::string_view ToString(ImageTiling input);
std::string_view ToString(ResolveModeMaskBit input);
std::string_view ToString(CoarseSampleOrderType input);
std::string_view ToString(PipelineCreateMaskBit input);
std::string_view ToString(AccelerationStructureType input);
std::string_view ToString(VideoDecodeCapabilityMaskBit input);
std::string_view ToString(OpticalFlowPerformanceLevel input);
std::string_view ToString(ShadingRatePaletteEntry input);
std::string_view ToString(VideoCodingControlMaskBit input);
std::string_view ToString(ImageType input);
std::string_view ToString(GeometryMaskBit input);
std::string_view ToString(BuildAccelerationStructureMaskBit input);
std::string_view ToString(AccelerationStructureCreateMaskBit input);
std::string_view ToString(RayTracingInvocationReorderMode input);
std::string_view ToString(CopyAccelerationStructureMode input);
std::string_view ToString(BuildAccelerationStructureMode input);
std::string_view ToString(GeometryType input);
std::string_view ToString(VideoEncodeH265CapabilityMaskBit input);
std::string_view ToString(RayTracingShaderGroupType input);
std::string_view ToString(VideoEncodeMaskBit input);
std::string_view ToString(GeometryInstanceMaskBit input);
std::string_view ToString(PerformanceConfigurationType input);
std::string_view ToString(FramebufferCreateMaskBit input);
std::string_view ToString(DisplayEventType input);
std::string_view ToString(PipelineColorBlendStateCreateMaskBit input);
std::string_view ToString(PerformanceCounterScope input);
std::string_view ToString(OpacityMicromapFormat input);
std::string_view ToString(MemoryDecompressionMethodMaskBit input);
std::string_view ToString(PerformanceCounterUnit input);
std::string_view ToString(PipelineBindPoint input);
std::string_view ToString(VideoEncodeTuningMode input);
std::string_view ToString(IndirectCommandsLayoutUsageMaskBit input);
std::string_view ToString(StencilFaceMaskBit input);
std::string_view ToString(BlendFactor input);
std::string_view ToString(PerformanceCounterStorage input);
std::string_view ToString(PerformanceCounterDescriptionMaskBit input);
std::string_view ToString(AcquireProfilingLockMaskBit input);
std::string_view ToString(DepthBiasRepresentation input);
std::string_view ToString(QueryPoolSamplingMode input);
std::string_view ToString(PerformanceParameterType input);
std::string_view ToString(VideoEncodeContentMaskBit input);
std::string_view ToString(PerformanceValueType input);
std::string_view ToString(ShaderFloatControlsIndependence input);
std::string_view ToString(PipelineExecutableStatisticFormat input);
std::string_view ToString(FragmentShadingRateCombinerOp input);
std::string_view ToString(VideoEncodeH264RateControlMaskBit input);
std::string_view ToString(PipelineCreationFeedbackMaskBit input);
std::string_view ToString(FragmentShadingRateType input);
std::string_view ToString(ShaderInfoType input);
std::string_view ToString(SubpassMergeStatus input);
std::string_view ToString(ImageCompressionMaskBit input);
std::string_view ToString(AccessMaskBit2 input);
std::string_view ToString(PipelineLayoutCreateMaskBit input);
std::string_view ToString(QueueGlobalPriority input);
std::string_view ToString(PresentGravityMaskBit input);
std::string_view ToString(FragmentShadingRate input);
std::string_view ToString(ProvokingVertexMode input);
std::string_view ToString(VideoDecodeH264PictureLayoutMaskBit input);
std::string_view ToString(AccelerationStructureMotionInstanceType input);
std::string_view ToString(PipelineDepthStencilStateCreateMaskBit input);
std::string_view ToString(PolygonMode input);
std::string_view ToString(FrameBoundaryMaskBit input);
std::string_view ToString(VideoComponentBitDepthMaskBit input);
std::string_view ToString(Result input);
std::string_view ToString(OpticalFlowUsageMaskBit input);
std::string_view ToString(PhysicalDeviceSchedulingControlsMaskBit input);
std::string_view ToString(QueryResultStatus input);
std::string_view ToString(VideoCodecOperationMaskBit input);
std::string_view ToString(SemaphoreImportMaskBit input);
std::string_view ToString(VideoCapabilityMaskBit input);
std::string_view ToString(ImageAspectMaskBit input);
std::string_view ToString(SubmitMaskBit input);
std::string_view ToString(VideoSessionCreateMaskBit input);
std::string_view ToString(VideoEncodeUsageMaskBit input);
std::string_view ToString(VideoEncodeFeedbackMaskBit input);
std::string_view ToString(VideoEncodeH264CapabilityMaskBit input);
std::string_view ToString(VideoEncodeH264StdMaskBit input);
std::string_view ToString(SurfaceCounterMaskBit input);
std::string_view ToString(RenderingMaskBit input);
std::string_view ToString(VideoEncodeH265RateControlMaskBit input);
std::string_view ToString(SurfaceTransformMaskBit input);
std::string_view ToString(QueryType input);
std::string_view ToString(PipelineCompilerControlMaskBit input);
std::string_view ToString(VideoEncodeH265TransformBlockSizeMaskBit input);
std::string_view ToString(SemaphoreCreateMaskBit input);
std::string_view ToString(BuildMicromapMode input);
std::string_view ToString(InstanceCreateMaskBit input);
std::string_view ToString(QueueMaskBit input);
std::string_view ToString(ImageCompressionFixedRateMaskBit input);
std::string_view ToString(PipelineRobustnessBufferBehavior input);
std::string_view ToString(PipelineRobustnessImageBehavior input);
std::string_view ToString(MemoryOverallocationBehavior input);
std::string_view ToString(OpticalFlowSessionBindingPoint input);
std::string_view ToString(BuildMicromapMaskBit input);
std::string_view ToString(DeviceFaultVendorBinaryHeaderVersion input);
std::string_view ToString(ColorSpace input);
std::string_view ToString(ShaderCodeType input);
std::string_view ToString(Scope input);

template <ScopedEnum E> std::string ToString(const Mask<E> &mask) {
  std::string result;
  using mask_type = typename Mask<E>::MaskType;
  auto mask_size = sizeof(mask_type) * 8;
  auto first = true;
  for (auto bit = 0; bit < mask_size; ++bit) {
    auto mask_bit = static_cast<E>(mask_type{1} << bit);
    if (mask & mask_bit) {
      if (first == false) result += "|";
      result += ToString(mask_bit);
      first = false;
    }
  }
  return first ? "None" : result;
}

} // namespace Walle

#endif // WALLE_GRAPHICS_STRING_TOOLS_H